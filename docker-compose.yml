services:
  localstack:
    image: localstack/localstack:3.8.1
    container_name: aws
    ports:
      - "0.0.0.0:4566:4566"
    env_file:
      - ./nest-token-event-photo/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "aws", "--endpoint-url=http://localstack:4566", "s3api", "list-buckets"]
      interval: 5s
      timeout: 10s
      retries: 30
      start_period: 60s
  mongo:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "0.0.0.0:27017:27017"
    networks:
      - app-network
    volumes:
      - mongo_data:/data/db
      - ./nest-token-event-photo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=nextlab
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 30s
  backend:
    build:
      context: ./nest-token-event-photo
      dockerfile: Dockerfile
    container_name: nest-token-event-photo
    ports:
      - "0.0.0.0:3001:3001"
    env_file:
      - ./nest-token-event-photo/.env
    depends_on:
      localstack:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./nest-token-event-photo:/app
      - backend_node_modules:/app/node_modules
  frontend:
    build:
      context: ./react-token-event-photo
      dockerfile: Dockerfile
    container_name: react-token-event-photo
    ports:
      - "0.0.0.0:3000:3000"
    env_file:
      - ./react-token-event-photo/.env
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./react-token-event-photo:/app
      - frontend_node_modules:/app/node_modules
networks:
  app-network:
    driver: bridge
volumes:
  mongo_data:
  backend_node_modules:
  frontend_node_modules: